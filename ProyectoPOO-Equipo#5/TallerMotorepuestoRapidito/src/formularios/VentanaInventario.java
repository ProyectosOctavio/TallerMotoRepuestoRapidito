/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import dao.Conexion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jorge Chávez
 */
public class VentanaInventario extends javax.swing.JInternalFrame {
         private final Conexion conex = new Conexion();
    /**
     * Creates new form VentanaInventario
     */
    public VentanaInventario() {
        initComponents();
        this.dispose();
        this.setTitle("TALLER DE REPUESTOS 'RAPIDITO' ");
        cargarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbInventario = new javax.swing.JTable();

        setBorder(null);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        tbInventario.setBackground(new java.awt.Color(204, 204, 204));
        tbInventario.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tbInventario.setForeground(new java.awt.Color(33, 45, 62));
        tbInventario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", "", "", "", "", "", null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Nombre", "Descripción", "Estante", "Stock", "Precio", "Salida"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbInventario.setPreferredSize(new java.awt.Dimension(782, 537));
        tbInventario.getTableHeader().setReorderingAllowed(false);
        tbInventario.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                tbInventarioComponentAdded(evt);
            }
        });
        jScrollPane1.setViewportView(tbInventario);
        if (tbInventario.getColumnModel().getColumnCount() > 0) {
            tbInventario.getColumnModel().getColumn(0).setResizable(false);
            tbInventario.getColumnModel().getColumn(1).setResizable(false);
            tbInventario.getColumnModel().getColumn(2).setResizable(false);
            tbInventario.getColumnModel().getColumn(3).setResizable(false);
            tbInventario.getColumnModel().getColumn(4).setResizable(false);
            tbInventario.getColumnModel().getColumn(5).setResizable(false);
            tbInventario.getColumnModel().getColumn(6).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 890, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbInventarioComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_tbInventarioComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_tbInventarioComponentAdded
    private void cargarTabla() { //Para que se pueda visualizar los datos de la tabla

        DefaultTableModel modeloTabla = (DefaultTableModel) tbInventario.getModel(); //Nuestra tabla del jframe
        modeloTabla.setRowCount(0);//reinicio de filas que tenga para no repetir informacion
//variables para hacer la tabla funcional
        PreparedStatement ps;
        ResultSet rs;
        ResultSetMetaData rsmd;
        int columnas;

        int[] anchos = {50, 50, 50, 50, 50, 50, 50}; //rango de las columnas del textfield
        for (int i = 0; i < tbInventario.getColumnCount(); i++) { //cuenta las columnas de mi tabla

            tbInventario.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]); // indice  y ancho de la columna con el contador i

        }

        try {

            Connection conn = conex.getConexion();
            ps = conn.prepareStatement("SELECT CodProducto, nombre, descripcion, estante, stock, precio, salida FROM Inventario"); //se agrega nuestra consulta. se seleccion los elementos de la tabla Inventario de nuestra base de datos.

            rs = ps.executeQuery(); //para ejecutar una consulta
            rsmd = rs.getMetaData(); // para que traiga nuestros metadatos de la consulta
            columnas = rsmd.getColumnCount(); //columnas que trae nuestra consulta

            while (rs.next()) {//extrae todos los datos de mi consulta

                Object[] fila = new Object[columnas];//contenedor de cada una de las filas de la tabla. Columnas es el tamano de mi objeto arreglo
                for (int indice = 0; indice < columnas; indice++) {
                    fila[indice] = rs.getObject(indice + 1);//llenamos nuestro objeto y se extrae los datos de las columnas.Cuando el indice sea 0 la columna es 1
                }
                modeloTabla.addRow(fila); //Asignar toda la fila que hemos construido
            }
         conex.close(conn);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.toString());

        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbInventario;
    // End of variables declaration//GEN-END:variables
}
